comandos git:

Iniciar o diretorio dentro da pasta selecionada no windows 11, abrir a pasta > clik com botao direito
> mostrar mais opções> Git Bash Here

--------------------------------------------------------------
	Tecle enter depois de cada comando
--------------------------------------------------------------

- Na janela de comando que abrir digite

	git init 	(inicia o diretorio no git)

- Comando para verificar os status dos arquivos

	git staus	(verifica o status dos arquivos)

-------------------------------------------------------------
- Criando versão do codigo e adicionando arquivo

	git add "NomeDoArquivoEsuaExteção"

- Adicionando varios arquivos de uma so vez

	git add .

usando o comando git add seguido de um ponto todos os arquivos
da pasta atual serão adicionados ao controle de versão;


--------------------------------------------------------------
- Criando a primeira versão - Criando commits

	git commit -m "commit inicial"

--------------------------------------------------------------	
- Configurando email na primeira inicialização
  coloque o email da sua conta do github no comando abaixo
  e nome de usuario entre aspas duplas.

	git config --global user.email "email.exemplo@email.com"

	git config --global user.name "nome-de-usuarios-github"

	git commit -m "commit inicial"	

 
 O nome commit inicial é uma frase que pode ser subistituido por 
 qualquer outra, serve apenas para identificar a versão.
 
--------------------------------------------------------------
- Enviar arquivos para a nuvem, github.

	git push

- Adicionando repositorio remoto

	git remote add origin link-do-repositorio

	git push
	
	git push --set-upstream origin master

caso seja a primeira vez que esta usando vai aparecer a tela de loguin
clik em entrar com navegador e depois em autorizar. Pgit ronto os arquivos 
serão enviado para o github.

--------------------------------------------------------------
 Criando um nova versão
--------------------------------------------------------------

	git commit -m "Arquivo de comandos atualizados"

- Enviardo arquivos para nuvem

	git push


--------------------------------------------------------------
 Verificando historico de versão
--------------------------------------------------------------

	git reflog

--------------------------------------------------------------
 Navegando entre versões
--------------------------------------------------------------
- Voltar para versão anterior (downgrade) localmente


	git reset --heard coloque-aqui-o-id-da-versão

	exemplo: git reset --heard 98bf327

- Para voltar para a versão mais atual novamente basta executar 
os comandos.
	
	git reflog 

- Para verificar os ids das versões

e pegar id desejado, se só tiver voltado uma versão o id da mais
atual será o segundo id da lista. ai é so executar o comando
	
	git reset --heard coloque-aqui-o-id-da-versão

O arquivo será atualizado localmente.

--------------------------------------------------------------
 Trabalhando com branch
--------------------------------------------------------------
- Verificar quais branch estão disponiveis

	git branch

- Criar uma nova branch

	git branch staging	

branch que esta recebendo atualizações de codigos nao testados
geralmente tem o nome de branch staging

- Selecionando a branch que vamos trabalhar

	git checkout staging

nesse caso o staging é o nome da nossa branch que queremos selecional

- Verificando se estar selecionada corretamente (deve aparecer com * e em verde)

	git branch

- Verificando modificações nos arquivos.
	
	git status

- Atualizando arquivos

	git add .

- criando nova versão (commit)

	git commit -m "descrisão do que mudou"

- enviando para a nuvem

	git push

Obs. se for a primeira vez que usa essa branch ele irá pedir para criar 
a branch na novem.
rode o comando que o git fornece. exemplo
	
	git push --set-upstream origin staging


--------------------------------------------------------------
 marge (combiando as branch depois de testado os codigos)
--------------------------------------------------------------
	
- Entrar na branch que vai recber as atualizações. exemplo:

	git checkout master

- Verificar se foi selecionada corretamente

	git branch

	git pull 

este comando git pull puxa a verção mais atual para a sua maquina
local para garantir que você irá atualizar a versão mais atual

Se tudo estiver correto vamos atualizar (merge)

	git merge nome-de-onde-vem-as-atualizações 

exemplo:

	git merge staging

--------------------------------------------------------------
passos a seguir
--------------------------------------------------------------
01 - git pull da branch pricipal
02 - gerar uma nova branch a partir da branch pricnipal
03 - trabalahar e adicionar novas funcionalidades na nova branch
04 - finalizar o trabalho na branch temporaria
05 - git checkout na branch principal
06 - gil pull
07 - mergiar(unir) o códico da branch temporária com a branch 
     principal (depois de testado)
08 - git push da branch principal
--------------------------------------------------------------

Criando arquivo gitignore para nao enviar arquivos especificos
para o controle de versão.

	touch .gitignore

vai ser criado um arquivo de texto de mesmo nome, abra o arquivo 
de texto e dentro dele coloque o nome e extessão do arquivo, no 
caso de pastas, coloque o nome da pastasta seguida de um barra /